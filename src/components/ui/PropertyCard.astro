---
import Image from 'astro/components/Image.astro';

export interface Props {
    imageSrc: ImageMetadata;
    imageAlt: string;
    saleType: string;
    featured?: boolean;
    price: number;
    currency: string;
    bedrooms: number;
    bathrooms: number;
    area: number;
    address: {
        street: string;
        intNumber: string;
        extNumber?: string;
        neighborhood: string;
        zipCode: number;
        city: string;
        state: string;
        country: string;
    };
    buttonText?: string;
}

const {
    imageSrc,
    imageAlt,
    saleType,
    featured,
    price,
    currency,
    bedrooms,
    bathrooms,
    area,
    address,
    buttonText = 'Ver detalles',
} = Astro.props;

const formattedAddress = `${address.street} ${address.extNumber}${address.intNumber ? ` Int. ${address.intNumber}` : ''}, ${address.neighborhood}, ${address.city}, ${address.state}, ${address.country}, CP ${address.zipCode}`;

const tagColor = saleType === 'Venta' ? 'bg-blue-500' : 'bg-green-500';
---

<div class="rounded-lg overflow-hidden bg-white shadow-lg">
    <div class="relative">
        <Image src={imageSrc} alt={imageAlt} class="w-full h-64 object-cover" />
        <!-- Etiqueta dinámica -->
        <div class={`absolute top-4 left-4 ${tagColor} text-white px-4 py-2 rounded-full text-xs font-semibold uppercase`}>
            {saleType}
        </div>
        {featured && (
            <div class="absolute top-4 right-4 bg-yellow-400 text-gray-800 px-4 py-2 rounded-full text-xs font-semibold uppercase">
                Destacado
            </div>
        )}
    </div>
    <div class="p-6">
        <div class="flex justify-between items-baseline mb-4">
            <h2 class="text-3xl font-bold text-gray-800">{price.toLocaleString('es-MX', { style: 'currency', currency: currency })}</h2>
            <span class="text-sm text-gray-500 font-medium">{currency}</span>
        </div>
        <div class="flex justify-between items-center">
            <div class="flex gap-4 text-gray-600">
                <span class="flex items-center text-sm font-medium">
                    <i class="ri-home-2-fill text-xl mr-1 text-brand-300 drop-shadow-sm"></i> {bedrooms}
                </span>
                <span class="flex items-center text-sm font-medium">
                    <i class="ri-drop-fill text-xl mr-1 text-brand-300 drop-shadow-sm"></i> {bathrooms}
                </span>
                <span class="flex items-center text-sm font-medium">
                    <i class="ri-grid-fill text-xl mr-1 text-brand-300 drop-shadow-sm"></i> {area} M²
                </span>
            </div>
        </div>
        <address class="text-gray-600 my-4 not-italic">
          {formattedAddress.split('\n').map((line, index) => (
              <p>{line}</p>
          ))}
        </address>
        <div class="border-t border-gray-200 pt-4">
            <button  class="w-full bg-brand-600 text-white py-2 rounded-full font-semibold hover:bg-brand-700 transition duration-300">
                {buttonText}
            </button>
        </div>
    </div>
</div>
